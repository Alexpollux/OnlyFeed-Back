name: CI/CD - Build & Deploy OnlyFeed Backend

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure gcloud + kubectl
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: awesome-pulsar-463009-g7
          install_components: 'kubectl'
          export_default_credentials: true

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials onlyfeed-cluster \
            --region europe-west9 \
            --project awesome-pulsar-463009-g7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR with PAT
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/arthurdelaporte/onlyfeed-backend:latest

      - name: Create namespace if not exists
        run: |
          kubectl create namespace onlyfeed-backend --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply backend-secrets to Kubernetes
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: backend-secrets
            namespace: onlyfeed-backend
          type: Opaque
          stringData:
            AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
            AWS_BUCKET_NAME: "${{ secrets.AWS_BUCKET_NAME }}"
            AWS_REGION: "${{ secrets.AWS_REGION }}"
            AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            DOMAIN_URL: "${{ secrets.DOMAIN_URL }}"
            INSEE_API_KEY: "${{ secrets.INSEE_API_KEY }}"
            JWT_SECRET: "${{ secrets.JWT_SECRET }}"
            NEXT_PUBLIC_SUPABASE_URL: "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}"
            STRIPE_SECRET_KEY: "${{ secrets.STRIPE_SECRET_KEY }}"
            STRIPE_WEBHOOK_SECRET: "${{ secrets.STRIPE_WEBHOOK_SECRET }}"
            SUPABASE_ANON_KEY: "${{ secrets.SUPABASE_ANON_KEY }}"
            SUPABASE_DB_URL: "${{ secrets.SUPABASE_DB_URL }}"
            SUPABASE_JWKS_URL: "${{ secrets.SUPABASE_JWKS_URL }}"
            SUPABASE_SERVICE_ROLE_KEY: "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          EOF

      - name: Apply backend-config ConfigMap
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: backend-config
            namespace: onlyfeed-backend
          data:
            GIN_MODE: "release"
            PORT: "8080"
          EOF

      - name: Restart deployment
        run: |
          kubectl rollout restart deployment onlyfeed-backend -n onlyfeed-backend