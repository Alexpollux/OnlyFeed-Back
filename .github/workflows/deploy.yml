name: CI/CD - Build & Deploy OnlyFeed Backend

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.actor }}/onlyfeed-backend:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.31.1'

      - name: Load kubeconfig from secret
        run: |
          echo "${{ secrets.KUBECONFIG_FILE }}" | base64 -d > kubeconfig.yaml
          echo "KUBECONFIG=$PWD/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Apply backend-secrets to Kubernetes
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: backend-secrets
            namespace: onlyfeed-backend
          type: Opaque
          stringData:
            AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
            AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            INSEE_API_KEY: "${{ secrets.INSEE_API_KEY }}"
            JWT_SECRET: "${{ secrets.JWT_SECRET }}"
            SUPABASE_ANON_KEY: "${{ secrets.SUPABASE_ANON_KEY }}"
            SUPABASE_DB_URL: "${{ secrets.SUPABASE_DB_URL }}"
            SUPABASE_JWKS_URL: "${{ secrets.SUPABASE_JWKS_URL }}"
            SUPABASE_SERVICE_ROLE_KEY: "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          EOF

      - name: Apply backend-config ConfigMap
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: backend-config
            namespace: onlyfeed-backend
          data:
            GIN_MODE: "release"
            PORT: "8080"
            AWS_REGION: "eu-west-3"
            AWS_BUCKET_NAME: "eemi-pec-of"
            NEXT_PUBLIC_SUPABASE_URL: "https://wqbpzxspimzrueuhhhgn.supabase.co"
          EOF

      - name: Restart deployment
        run: |
          kubectl rollout restart deployment onlyfeed-backend -n onlyfeed-backend